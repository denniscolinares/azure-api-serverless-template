service: api-templates

custom:
    environments:
        local: local
        dev: Dev
        test: Test
        stg: Stage
        prod: Prod
        
provider:
    name: azure
    runtime: nodejs12
    prefix: "Azure"
    stage: ${opt:stage, 'dev'}
    location: "Southeast Asia"
    region: ${self:provider.location}
    subscriptionId: ${self:provider.environment.AZURE_SUBSCRIPTION_ID}
    resourceGroup: 'DefaultResourceGroup-SEA' #Set manually the resourceGroup
    type: premium # values consumption, premium
    environment:
        NODE_ENV: ${self:provider.stage}
        DOMAIN_BASEPATH: "api"
        APP_NAME: ${self:service}
        APP_HOST_SSL: false
        APP_TIMEZONE: "Asia/Manila"
        AZURE_SUBSCRIPTION_ID: "cc6db917-9d37-4986-973e-bd71bffaca0e"
        AZURE_TENANT_ID: ""
        AZURE_CLIENT_ID: ""
        AZURE_CLIENT_SECRET: ""
        ACCESSKEY: ""
        SECRETKEY: ""
        DB_DRIVER: mysql
        DB_NAME: ""
        DB_USERNAME: ""
        DB_PASSWORD: ""
        DB_HOST: ""
        DB_PORT: 3306
        DB_SSL: true
    
functions:
    app:
        handler: index
        name: req
        events:
            -   http: true
                methods:
                    - get
                    - post
                    - put
                    - delete
                route: "{*segments}"
                authLevel: anonymous

    warmup:
        handler: warmup/warmup
        events:
            -   timer: true
                name: timerObj
                schedule: "0 */15 * * * *"

package:
    excludeDevDependencies: true
    patterns:
        - '!node_modules/@modulenamespace/*/node_modules/**'
        - '!.git/**'
        - '!.idea/**'
        - '!.vscode/**'
        - '!temp/**'
        - '!.env.sample'
        - '!local.settings.json'
        - '!.gitignore'
        - api/**
        - config/**
        - database/**
        - library/**
        - logs/**
        - routes/**
        - system/**
        - test/**
        - warmup/**
        - .env
        - .sequelizerc
        - host.json
        - index.js
        - jest.config.json
        - package.json
        - package-lock.json

plugins:
  - serverless-azure-functions
